#############################################
##### Testing
#############################################

set(prefix "${MODULE}")

add_test(
    NAME ${prefix}_can_Run
    COMMAND ${APPLICATION}
)
set_tests_properties (${prefix}_can_Run PROPERTIES
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Print_Help_Without_Arguments
    COMMAND ${APPLICATION}
)
set_tests_properties (${prefix}_can_Print_Help_Without_Arguments PROPERTIES
    PASS_REGULAR_EXPRESSION "This is an application for infix to postfix conversion"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Check_Number_Of_Arguments
    COMMAND ${APPLICATION} 1 2
)
set_tests_properties (${prefix}_can_Check_Number_Of_Arguments PROPERTIES
    PASS_REGULAR_EXPRESSION "ERROR: Should be 1 argument"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Detect_Empty_Input
    COMMAND ${APPLICATION} ""
)
set_tests_properties (${prefix}_can_Detect_Empty_Input PROPERTIES
    PASS_REGULAR_EXPRESSION "Input is empty"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Detect_Wrong_Character
    COMMAND ${APPLICATION} 1+x
)
set_tests_properties (${prefix}_can_Detect_Wrong_Character PROPERTIES
    PASS_REGULAR_EXPRESSION "is not valid character"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Detect_Operation_In_First_Position
    COMMAND ${APPLICATION} +1+1
)
set_tests_properties (${prefix}_can_Detect_Operation_In_First_Position PROPERTIES
    PASS_REGULAR_EXPRESSION "First character can't be an operation"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Detect_Operation_At_Last_Position
    COMMAND ${APPLICATION} 1+1+
)
set_tests_properties (${prefix}_can_Detect_Operation_At_Last_Position PROPERTIES
    PASS_REGULAR_EXPRESSION "Last character can't be an operation"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Detect_Operation_After_Operation
    COMMAND ${APPLICATION} 1++1
)
set_tests_properties (${prefix}_can_Detect_Operation_After_Operation PROPERTIES
    PASS_REGULAR_EXPRESSION "Operation should be followed by number or"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Detect_Close_Bracket_After_Operation
    COMMAND ${APPLICATION} "1+)"
)
set_tests_properties (${prefix}_can_Detect_Close_Bracket_After_Operation PROPERTIES
    PASS_REGULAR_EXPRESSION "Operation should be followed by number or"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Detect_Number_After_Close_Bracket
    COMMAND ${APPLICATION} "(1+1)1"
)
set_tests_properties (${prefix}_can_Detect_Number_After_Close_Bracket PROPERTIES
    PASS_REGULAR_EXPRESSION "'\\)' should be followed by an operation"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Detect_Open_Bracket_After_Close_Bracket
    COMMAND ${APPLICATION} "(1+1)(1+1)"
)
set_tests_properties (${prefix}_can_Detect_Open_Bracket_After_Close_Bracket PROPERTIES
    PASS_REGULAR_EXPRESSION "'\\)' should be followed by an operation"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Detect_Operation_After_Open_Bracket
    COMMAND ${APPLICATION} "(+1+1)"
)
set_tests_properties (${prefix}_can_Detect_Operation_After_Open_Bracket PROPERTIES
    PASS_REGULAR_EXPRESSION "'\\(' should be followed by an integer"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Detect_Close_Bracket_After_Open_Bracket
    COMMAND ${APPLICATION} "1+()"
)
set_tests_properties (${prefix}_can_Detect_Close_Bracket_After_Open_Bracket PROPERTIES
    PASS_REGULAR_EXPRESSION "'\\(' should be followed by an integer"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Detect_Wrong_Integer
    COMMAND ${APPLICATION} 1+01
)
set_tests_properties (${prefix}_can_Detect_Wrong_Integer PROPERTIES
    PASS_REGULAR_EXPRESSION "is wrong integer value"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Work_Without_Brackets
    COMMAND ${APPLICATION} 1+1
)
set_tests_properties (${prefix}_can_Work_Without_Brackets PROPERTIES
    PASS_REGULAR_EXPRESSION "1 1 \\+"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Work_With_Brackets
    COMMAND ${APPLICATION} "(1+1)"
)
set_tests_properties (${prefix}_can_Work_With_Brackets PROPERTIES
    PASS_REGULAR_EXPRESSION "1 1 \\+"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Detect_Open_Bracket_Without_Close
    COMMAND ${APPLICATION} "(1+1"
)
set_tests_properties (${prefix}_can_Detect_Open_Bracket_Without_Close PROPERTIES
    PASS_REGULAR_EXPRESSION "Wrong input expression"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Detect_Close_Bracket_Without_Open
    COMMAND ${APPLICATION} "1+1)"
)
set_tests_properties (${prefix}_can_Detect_Close_Bracket_Without_Open PROPERTIES
    PASS_REGULAR_EXPRESSION "Wrong input expression"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Detect_Open_Bracket_Before_Operation
    COMMAND ${APPLICATION} "(+1+2)"
)
set_tests_properties (${prefix}_can_Detect_Open_Bracket_Before_Operation PROPERTIES
    PASS_REGULAR_EXPRESSION "'\\(' should be followed by an integer or '\\('"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Detect_Close_Bracket_After_Open
    COMMAND ${APPLICATION} "1+()"
)
set_tests_properties (${prefix}_can_Detect_Close_Bracket_After_Open PROPERTIES
    PASS_REGULAR_EXPRESSION "'\\(' should be followed by an integer or '\\('"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Detect_Open_Bracket_After_Number
    COMMAND ${APPLICATION} "1+1(1+1)"
)
set_tests_properties (${prefix}_can_Detect_Open_Bracket_After_Number PROPERTIES
    PASS_REGULAR_EXPRESSION "Number can't be followed by '\\('"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Work_With_Operation_Between_Brackets
    COMMAND ${APPLICATION} "(1+1)+(1+1)"
)
set_tests_properties (${prefix}_can_Work_With_Operation_Between_Brackets PROPERTIES
    PASS_REGULAR_EXPRESSION "1 1 \\+ 1 1 \\+ \\+"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Work_With_Nested_Brackets
    COMMAND ${APPLICATION} "(1+(1+1)+1)"
)
set_tests_properties (${prefix}_can_Work_With_Nested_Brackets PROPERTIES
    PASS_REGULAR_EXPRESSION "1 1 1 \\+ \\+ 1 \\+"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Work_With_Open_Bracket_After_Open_Braket
    COMMAND ${APPLICATION} "((1+1)+1)"
)
set_tests_properties (${prefix}_can_Work_With_Open_Bracket_After_Open_Braket PROPERTIES
    PASS_REGULAR_EXPRESSION "1 1 \\+ 1 \\+"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Work_With_Close_Bracket_After_Close_Braket
    COMMAND ${APPLICATION} "(1+(1+1))"
)
set_tests_properties (${prefix}_can_Work_With_Close_Bracket_After_Close_Braket PROPERTIES
    PASS_REGULAR_EXPRESSION "1 1 1 \\+ \\+"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Detect_Open_Bracket_After_Close
    COMMAND ${APPLICATION} "(1+1)(1+1)"
)
set_tests_properties (${prefix}_can_Detect_Open_Bracket_After_Close PROPERTIES
    PASS_REGULAR_EXPRESSION "'\\)' should be followed by an operation or '\\)'"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Work_With_Operation_With_Same_Priority
    COMMAND ${APPLICATION} "1+1-1"
)
set_tests_properties (${prefix}_can_Work_With_Operation_With_Same_Priority PROPERTIES
    PASS_REGULAR_EXPRESSION "1 1 \\+ 1 -"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Work_With_Operation_With_Diff_Priorities
    COMMAND ${APPLICATION} "1+2*2"
)
set_tests_properties (${prefix}_can_Work_With_Operation_With_Diff_Priorities PROPERTIES
    PASS_REGULAR_EXPRESSION "1 2 2 \\* \\+"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Work_With_Zero_Integer
    COMMAND ${APPLICATION} "1+0"
)
set_tests_properties (${prefix}_can_Work_With_Zero_Integer PROPERTIES
    PASS_REGULAR_EXPRESSION "1 0 \\+"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Work_With_Complex_Expr_Without_Brackets
    COMMAND ${APPLICATION} "8+2*5-1/7+3*2-4"
)
set_tests_properties (${prefix}_can_Work_With_Complex_Expr_Without_Brackets PROPERTIES
    PASS_REGULAR_EXPRESSION "8 2 5 \\* \\+ 1 7 / - 3 2 \\* \\+ 4 -"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Work_With_Complex_Expr_With_Brackets
    COMMAND ${APPLICATION} "(8+2*5)/(1+3*2-4)"
)
set_tests_properties (${prefix}_can_Work_With_Complex_Expr_With_Brackets PROPERTIES
    PASS_REGULAR_EXPRESSION "8 2 5 \\* \\+ 1 3 2 \\* \\+ 4 - /"
    LABELS "${MODULE}")

